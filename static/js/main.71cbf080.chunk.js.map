{"version":3,"sources":["components/Form.js","components/Task.js","App.js","index.js"],"names":["Form","createTasks","useState","name","surname","date","time","description","task","setTask","updateState","e","preventDefault","target","value","handleSubmit","a","Swal","fire","position","icon","title","showConfirmButton","timer","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","id","uuidv4","onSubmit","type","placeholder","className","onChange","Task","deleteTask","onClick","App","initialTasks","JSON","parse","localStorage","getItem","tasks","setTasks","newTasks","filter","length","useEffect","setItem","stringify","console","log","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71cbf080.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Swal from \"sweetalert2\";\n\nconst Form = ({ createTasks }) => {\n  const [task, setTask] = useState({\n    name: \"\",\n    surname: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n  });\n\n  const updateState = (e) => {\n    e.preventDefault();\n\n    setTask({ ...task, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    //validation\n    if (!name || !surname || !date || !time || !description) {\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Form is empty!\",\n        showConfirmButton: false,\n        timer: 1600,\n      });\n      return null;\n    } else {\n      await Swal.fire({\n        title: \"CONFIRM\",\n        showDenyButton: true,\n        confirmButtonText: `yes`,\n        denyButtonText: `Cancel`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: \"Sent!\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n\n          //only if send was successful we send the task and clear the form\n          task.id = uuidv4();\n          createTasks(task);\n          setTask({\n            name: \"\",\n            surname: \"\",\n            date: \"\",\n            time: \"\",\n            description: \"\",\n          });\n        }\n      });\n    }\n  };\n\n  const { name, surname, date, time, description } = task;\n\n  return (\n    <>\n      <h2>create new task</h2>\n\n      <form onSubmit={handleSubmit}>\n        <label>Developer name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={name}\n        />\n\n        <label>Developer surname</label>\n        <input\n          type=\"text\"\n          name=\"surname\"\n          placeholder=\"Surname\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={surname}\n        />\n\n        <label>Date</label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={date}\n        />\n\n        <label>Time</label>\n        <input\n          type=\"time\"\n          name=\"time\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={time}\n        />\n\n        <label>Description</label>\n        <textarea\n          name=\"description\"\n          placeholder=\"Description\"\n          className=\"u-full-width\"\n          onChange={updateState}\n          value={description}\n        />\n\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Task = ({ deleteTask, task }) => {\n  const { name, surname, date, time, description, id } = task;\n\n  return (\n    <>\n      <div className=\"tarea\">\n        <p>\n          Name: <span> {name} </span>{\" \"}\n        </p>\n        <p>\n          Surname: <span> {surname}</span>{\" \"}\n        </p>\n        <p>\n          Date: <span> {date}</span>{\" \"}\n        </p>\n        <p>\n          Time: <span> {time} </span>\n        </p>\n        <p>\n          Description:<span> {description}</span>{\" \"}\n        </p>\n\n        <button\n          className=\"button eliminar u-full-width\"\n          onClick={() => deleteTask(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Task;\n\n//onClick={deleteTask(id)}\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Task from \"./components/Task\";\n\nconst App = () => {\n  let initialTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n  if (!initialTasks) {\n    initialTasks = [];\n  }\n\n  const [tasks, setTasks] = useState(initialTasks);\n\n  const createTasks = (task) => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n  };\n\n  const title = tasks.length === 0 ? <h1>no tasks</h1> : <h1>tasks</h1>;\n\n  useEffect(() => {\n    if (initialTasks) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n    }\n    console.log(tasks);\n  }, [tasks, initialTasks]);\n\n  return (\n    <>\n      <h1>tasks manager</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Form createTasks={createTasks} />\n          </div>\n          <div className=\"one-half column\">\n            {title}\n            {tasks.map((task) => (\n              <Task task={task} deleteTask={deleteTask} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}